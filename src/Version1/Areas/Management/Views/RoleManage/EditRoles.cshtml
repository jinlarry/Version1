@model EditRolesViewModel

<h1>Matching users and roles</h1>

<form class="form-horizontal" id="formEditRole" asp-route-area="management" asp-controller="Volunteer" asp-action="EditRoles" method="post" role="form">

    <input id="Roles" value="@Model.Roles" hidden />

    <table id="tblUsersRoles" class="table">
        <thead>
            <tr>
                <th>All Users \ All Roles</th>
                @foreach(var role in Model.Roles)
                {
                    <th>
                        @role.Name
                        <input value="@role.Name" hidden />
                    </th>
                }
            </tr>
        </thead>

        <tbody>
            @foreach(var item in Model.UserCheckValueDict)
            {
                <tr>
                    <td>
                        @item.Key.FirstName @item.Key.LastName

                        @* this value will be insert in the dict as a key *@
                        <input value="@item.Key.Id" hidden />
                    </td>
                    @foreach(var val in item.Value)
                    {
                        <td>
                            @if(val)
                            {
                                <button class="btneditRole btn btn-sm glyphicon glyphicon-ok" role="checkbox" value="true"></button>
                            }
                            else
                            {
                                <button class="btneditRole btn btn-sm glyphicon glyphicon-remove" role="checkbox" value="false"></button>
                            }

                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <button id="submit" class="btn btn-default btnSubmit" role="button">Save Roles</button>
</form>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.btneditRole').click(function (event) {
                event.preventDefault();
                if ($(this).attr('value') == 'true') {
                    $(this).attr('value', 'false');
                    $(this).removeClass('glyphicon-ok').addClass('glyphicon-remove');
                }
                else if ($(this).attr('value') == 'false') {
                    $(this).attr('value', 'true');
                    $(this).removeClass('glyphicon-remove').addClass('glyphicon-ok');
                }
            });

            $('#formEditRole').on('click', '#submit', function (event) {
                event.preventDefault();

                // Create an array for value of the dict.
                var listForChecks;

                // Create an dict for post back to view model.
                var dict = new Object();

                // Select rows in a table except the header
                //var rows = $('table tbody tr');

                // The list of roles that will be posted back. It stores the order of roles.
                var roleNames = new Object();
                $('tr:first th:gt(0)').children().each(function (index) {
                    roleNames[index] = $(this).val();
                });

                $('table tbody tr').each(function (index) {
                    // New list for each row.
                    listForChecks = new Object();

                    // Insert value to list
                    $(this).children().children('button').each(function (index) {
                        listForChecks[index] = $(this).val();
                    });

                    var userId = $(this).children().children('input').val();

                    // Store all in dict.
                    dict[userId] = listForChecks;
                });

                var postUrl = '/Management/RoleManage/EditRoles';

                // Post and return to the given view is there is nothing to return.
                $.post(postUrl, { PostBackDict: dict, RoleNames: roleNames }, function (result) {
                    window.location.assign("/Management/RoleManage/Index");
                });
            });
        });
    </script>
}